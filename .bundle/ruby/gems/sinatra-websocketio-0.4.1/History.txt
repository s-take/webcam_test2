=== 0.4.0 2013-10-05

* MIT License
* bugfix ruby-client
* fix tests

=== 0.4.0 2013-10-04

* bugfix of message push

=== 0.3.9 2013-10-03

* bugfix

=== 0.3.8 2013-10-03

* bugfix of push

=== 0.3.7 2013-10-01

* little fix

=== 0.3.6 2013-10-01

* store REMOTE_ADDR into Sinatra::WebSocketIO.sessions

=== 0.3.5 2013-08-09

* push "__heartbeat" message from server every 300 sec

=== 0.3.4 2013-08-02

* delete unnecessary code
* use jquery 1.10.2 in sample app

=== 0.3.3 2013-06-05

* fix JS lib

=== 0.3.2 2013-06-05

* bugfix error catching in JS lib

=== 0.3.1 2013-05-27

* add constructor args in JS lib

=== 0.3.0 2013-05-24

* bugfix Ruby Client

=== 0.2.9 2013-05-15

* push "__heartbeat" in Ruby Client for detecting disconnect event

=== 0.2.8 2013-04-18

* set default websocket port 9000

=== 0.2.7 2013-04-18

* set wetsocket port ENV["WS_PORT"]

=== 0.2.6 2013-04-03

* bugfix setting

=== 0.2.5 2013-04-03

* print invalid setting error

=== 0.2.4 2013-04-02

* bugfix WebSocket check on iOS

=== 0.2.3 2013-04-01

* bugfix js

=== 0.2.2 2013-03-26

* bugfix WebSocketIO::push

=== 0.2.1 2013-03-26

* fix WebSocketIO::push

=== 0.2.0 2013-03-23

* add Sinatra::WebSocketIO::Client
* use gem.add_development_dependency
* delete sample/Gemfile

=== 0.1.7 2013-03-21

* emit "error" on push before websocket connect

=== 0.1.6 2013-03-20

* bugfix gem dependencies

=== 0.1.5 2013-03-19

* modify session storage
* not push to unexist client

=== 0.1.4 2013-03-19

* update event_emitter.js v0.0.7

=== 0.1.3 2013-03-18

* require "sinatra/websocketio_nostart"

=== 0.1.2 2013-03-18

* fix gem dependencies

=== 0.1.1 2013-03-17

* read javascript file - Sinatra::WebSocketIO.javascript

=== 0.1.0 2013-03-16

* support modular style application

=== 0.0.6 2013-03-10

* add tests

=== 0.0.5 2013-03-10

* handle 10K clients

=== 0.0.4 2013-03-10

* close websocket if session_id duplicate

=== 0.0.3 2013-03-09

* add EM::WebSocketIO::Client

=== 0.0.2 2013-03-08

* set :websocketio, :port => 8080

=== 0.0.1 2013-03-08

* release
